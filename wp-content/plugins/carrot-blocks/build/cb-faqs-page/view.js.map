{"version":3,"file":"cb-faqs-page/view.js","mappings":";;;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EACnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,cAAc,CAAC;EAEzD,KAAK,IAAIC,MAAM,IAAIF,OAAO,EAAE;IAC3BE,MAAM,CAACH,gBAAgB,CAAC,OAAO,EAAE,UAAUI,CAAC,EAAE;MAC7CA,CAAC,CAACC,cAAc,CAAC,CAAC;MAElB,MAAMC,OAAO,GAAGH,MAAM,CAACI,YAAY,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;MAErDT,QAAQ,CAACU,cAAc,CAACH,OAAO,CAAC,CAACI,cAAc,CAAC;QAC/CC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;MACR,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD,CAAC,CAAC,C","sources":["webpack://carrot-blocks/./src/cb-faqs-page/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n\t// const anchors = [].slice.call(document.querySelectorAll('a[href*=\"#\"]')),\n\t// \tanimationTime = 500,\n\t// \tframesCount = 20;\n\t// anchors.forEach(function (item) {\n\t// \titem.addEventListener(\"click\", function (e) {\n\t// \t\t// убираем стандартное поведение\n\t// \t\te.preventDefault();\n\t// \t\t// для каждого якоря берем соответствующий ему элемент и определяем его координату Y\n\t// \t\tlet coordY =\n\t// \t\t\tdocument\n\t// \t\t\t\t.querySelector(item.getAttribute(\"href\"))\n\t// \t\t\t\t.getBoundingClientRect().top + window.pageYOffset;\n\t// \t\t// запускаем интервал, в котором\n\t// \t\tlet scroller = setInterval(function () {\n\t// \t\t\t// считаем на сколько скроллить за 1 такт\n\t// \t\t\tlet scrollBy = coordY / framesCount;\n\t// \t\t\t// если к-во пикселей для скролла за 1 такт больше расстояния до элемента\n\t// \t\t\t// и дно страницы не достигнуто\n\t// \t\t\tif (\n\t// \t\t\t\tscrollBy > window.pageYOffset - coordY &&\n\t// \t\t\t\twindow.innerHeight + window.pageYOffset < document.body.offsetHeight\n\t// \t\t\t) {\n\t// \t\t\t\t// то скроллим на к-во пикселей, которое соответствует одному такту\n\t// \t\t\t\twindow.scrollBy(0, scrollBy);\n\t// \t\t\t} else {\n\t// \t\t\t\t// иначе добираемся до элемента и выходим из интервала\n\t// \t\t\t\twindow.scrollTo(0, coordY);\n\t// \t\t\t\tclearInterval(scroller);\n\t// \t\t\t}\n\t// \t\t\t// время интервала равняется частному от времени анимации и к-ва кадров\n\t// \t\t}, animationTime / framesCount);\n\t// \t});\n\t// });\n\n\tconst anchors = document.querySelectorAll('a[href*=\"#\"]');\n\n\tfor (let anchor of anchors) {\n\t\tanchor.addEventListener(\"click\", function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tconst blockID = anchor.getAttribute(\"href\").substr(1);\n\n\t\t\tdocument.getElementById(blockID).scrollIntoView({\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t\tblock: \"start\",\n\t\t\t});\n\t\t});\n\t}\n});\n"],"names":["document","addEventListener","anchors","querySelectorAll","anchor","e","preventDefault","blockID","getAttribute","substr","getElementById","scrollIntoView","behavior","block"],"sourceRoot":""}